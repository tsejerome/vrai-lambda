service: vrai-ffmpeg-lambda

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-offline-sns

custom:
  esbuild:
    inject:
      - env.ts
    outputFileExtension: .js
    format: cjs
    mainFields: ["main", "module"]
  current_stage: ${opt:stage, 'dev'}
  env_var:
    node_env:
      production: "production"
      dev: "development"
    s3_bucket:
      production: "vrai"
      dev: "vrai"
# Warmup disabled for now
  # warmup:
  #   default:
  #     enabled: true
  #     name: ${self:service}-${opt:stage, self:provider.stage}-warmer
  #     events:
  #       - schedule: "cron(0/5 * * * ? *)"
  serverless-offline-sns:
    port: 4002
    debug: false

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-2
  stage: ${self:custom.current_stage}
  role: arn:aws:iam::498727037516:role/deploy-lambda-role
  environment:
    node_env: ${self:custom.env_var.node_env.${self:custom.current_stage}}
    PATH: /opt/bin:/var/task/ffmpeg/bin:${env:PATH}
  apiGateway:
    binaryMediaTypes:
      - '*/*'
    shouldStartNameWithService: true
    minimumCompressionSize: 1024

functions:
  app:
    url: true
    handler: app.server
    timeout: 900
    memorySize: 1024
    environment:
      sieve_api_key: ${env:sieve_api_key, 'placeholder'}
      aws_access_key_id: ${env:aws_access_key_id, 'placeholder'}
      aws_access_pw: ${env:aws_access_pw, 'placeholder'}
      s3_bucket_name: ${env:s3_bucket_name, 'vrai'}
      openai_secret: ${env:openai_secret, 'placeholder'}
      FIREBASE_SERVICE_ACCOUNT_KEY: ${env:FIREBASE_SERVICE_ACCOUNT_KEY, 'placeholder'}
      DATABASE_URL: ${env:DATABASE_URL, 'placeholder'}
      NEXT_PUBLIC_CLIENT_FIREBASE_CONFIG: ${env:NEXT_PUBLIC_CLIENT_FIREBASE_CONFIG, 'placeholder'}
      NODE_ENV: production
    events:
      - http:
          path: /
          method: ANY
          request:
            schemas:
              application/json:
                type: object
            parameters:
              headers:
                Content-Type: true
      - http:
          path: /{proxy+}
          method: ANY
          request:
            schemas:
              application/json:
                type: object
            parameters:
              headers:
                Content-Type: true
# Layers temporarily disabled - need to be created in us-east-2 region
    # layers:
    #   - arn:aws:lambda:us-east-2:498727037516:layer:ffmpeg-layer:5
    #   - arn:aws:lambda:us-east-2:498727037516:layer:ffprobe:7
