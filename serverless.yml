service: vrai-ffmpeg-lambda
frameworkVersion: '^3.38.0'

# Automatically load environment variables from .env files
useDotenv: true

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-offline-sns
  - serverless-dotenv-plugin
  # Temporarily disabled warmup plugins:
  # - serverless-plugin-warmup-ts-bridge
  # - serverless-plugin-warmup

custom:
  esbuild:
    inject:
      - env.ts
    outputFileExtension: .js
    format: cjs
    mainFields: ["main", "module"]
  current_stage: ${opt:stage, 'dev'}
  env_var:
    node_env:
      production: "production"
      dev: "development"
    s3_bucket:
      production: "vrai"
      dev: "vrai"
  # API Gateway events only for local development
  events:
    dev:
      - http:
          path: /
          method: ANY
          request:
            schemas:
              application/json:
                type: object
            parameters:
              headers:
                Content-Type: true
      - http:
          path: /{proxy+}
          method: ANY
          request:
            schemas:
              application/json:
                type: object
            parameters:
              headers:
                Content-Type: true
    production: []
    staging: []
  # Temporarily disabled warmup config:
  # warmup:
  #   runtime: nodejs20.x
  #   enabled: true
  #   folderName: "_warmup"
  #   name: ${self:service}-${opt:stage, self:provider.stage}-warmer
  #   cleanFolder: false
  #   memorySize: 256
  #   role: arn:aws:iam::498727037516:role/deploy-lambda-role
  #   tags:
  #     Project: vrai-lambda
  #     Owner: vrai
  #   vpc: false
  #   events:
  #     - schedule: "cron(0/5 * * * ? *)"
  #   package:
  #     individually: true
  #     excludeDevDependencies: false
  #     exclude:
  #       - ./src/tests/**
  #       - ./node_modules/**
  #       - ./src/**
  #     include:
  #       - "_warmup/**"
  #       - "./node_modules/ffprobe-static/bin/darwin/arm64/ffprobe"
  #   timeout: 60
  #   prewarm: true
  #   concurrency: 5
  serverless-offline-sns:
    port: 4002
    debug: false
  serverless-offline:
    httpPort: 3002
    lambdaPort: 3003
    websocketPort: 3001
    noPrependStageInUrl: true
    noAuth: true

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2
  stage: ${self:custom.current_stage}
  # role: arn:aws:iam::498727037516:role/deploy-lambda-role  # Removed cross-account role
  environment:
    node_env: ${self:custom.env_var.node_env.${self:custom.current_stage}}
    PATH: /opt/bin:/var/task/ffmpeg/bin:${env:PATH}
  # Removed API Gateway config since using Lambda URL only:
  # apiGateway:
  #   binaryMediaTypes:
  #     - '*/*'
  #   shouldStartNameWithService: true
  #   minimumCompressionSize: 1024

functions:
  app:
    url: true
    handler: app.server
    timeout: 900
    memorySize: 1024
    environment:
      # Environment variables loaded from .env.local via useDotenv
      openai_secret: ${env:openai_secret}
    
    layers:
      - arn:aws:lambda:us-east-2:290839967981:layer:ffprobe:1
      - arn:aws:lambda:us-east-2:290839967981:layer:ffmpeg-layer:1
    # API Gateway events ONLY for local development (serverless offline)
    events: ${self:custom.events.${self:custom.current_stage}}
    # Temporarily disabled cross-account layers:
    # layers:
    #   - arn:aws:lambda:us-east-2:498727037516:layer:ffmpeg-layer:5
    #   - arn:aws:lambda:us-east-2:498727037516:layer:ffprobe:7
