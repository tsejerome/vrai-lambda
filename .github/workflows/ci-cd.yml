name: CI/CD Pipeline

on:
  push:
    branches:
      - staging
      - production
      - hotfix
  pull_request:
    branches:
      - production
      - staging

env:
  NODE_VERSION: 16
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.event_name == pull_request    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
        # Uncomment when tests are ready
        # run: npx jest --detectOpenHandles

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/staging
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm'
      
      - name: Install Serverless Framework
        run: npm install -g serverless@30.12     
      - name: Install dependencies
        run: npm ci
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      
      - name: Deploy to staging
        run: serverless deploy --stage dev

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/production|| github.ref == refs/heads/hotfix
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm'
      
      - name: Install Serverless Framework
        run: npm install -g serverless@20.72.4     
      - name: Install dependencies
        run: npm ci
      
      - name: Install additional dev dependencies
        run: |
          npm install --save-dev serverless-plugin-warmup
          npm install --save-dev serverless-plugin-warmup-ts-bridge
          npm install --save-dev serverless-plugin-include-dependencies
      
      - name: Create production environment file
        run: echo "$[object Object][object Object] secrets.ENV_PROD_TS }}" > ./src/config/env.prod.ts
      
      - name: Clean ffmpeg directory
        run: rm -rf ffmpeg/*
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      
      - name: Deploy to production
        run: npx serverless@2.72.4--stage production 